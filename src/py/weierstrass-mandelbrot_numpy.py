import numpy as np


def weierstrass_mandelbrot_3d(x, y, D, G, L, gamma, M, n_max):
    """
    Compute the 3D Weierstrass-Mandelbrot function z(x, y).

    Parameters:
        x, y : 2D np.ndarrays
            Meshgrid arrays of spatial coordinates.
        D : float
            Fractal dimension (typically between 2 and 3).
        G : float
            Amplitude roughness coefficient.
        L : float
            Transverse width of the profile.
        gamma : float
            Frequency scaling factor (typically > 1).
        M : int
            Number of ridges (azimuthal angles).
        n_max : int
            Upper cutoff frequency index.

    Returns:
        z : 2D np.ndarray
            The height field generated by the WM function.
    """
    A = L * (G / L) ** (D - 2) * (np.log(gamma) / M) ** 0.5

    z = np.zeros_like(x)

    for m in range(1, M + 1):
        theta_m = np.arctan2(y, x) - np.pi * m / M
        phi_mn = np.random.uniform(0, 2 * np.pi, size=n_max + 1)  # random phase per n

        for n in range(n_max + 1):
            gamma_n = gamma ** n
            r = np.sqrt(x ** 2 + y ** 2)
            term = (
                    np.cos(phi_mn[n]) -
                    np.cos(
                        2 * np.pi * gamma_n * r / L *
                        np.cos(theta_m) + phi_mn[n]
                    )
            )
            z += gamma ** ((D - 3) * n) * term

    z *= A
    return z


if __name__ == '__main__':  # example
    import matplotlib.pyplot as plt

    # Create meshgrid
    x_vals = np.linspace(0, 1024, 1000)
    y_vals = np.linspace(0, 1024, 1000)
    x, y = np.meshgrid(x_vals, y_vals)

    # Parameters
    D = 2.5
    G = 1e-1
    L = 100.0
    gamma = 1.5
    M = 10
    n_max = 20

    # Compute WM surface
    z = weierstrass_mandelbrot_3d(x, y, D, G, L, gamma, M, n_max)

    # Plot
    fig = plt.figure(figsize=(10, 7))
    ax = fig.add_subplot(111, projection='3d')
    ax.plot_surface(x, y, z, cmap='viridis', linewidth=0)
    ax.set_aspect('equal', adjustable='box')
    ax.set_title('3D Weierstrass-Mandelbrot Surface')
    plt.show()

    plt.imshow(z, cmap='gray', interpolation='lanczos')  # height map
    plt.colorbar()
    plt.show()
